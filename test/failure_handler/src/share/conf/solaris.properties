#
# Copyright (c) 2015, 2020, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

config.execSuffix=
# pattern will be replaced with the PID
config.getChildren.pattern=%p
config.getChildren.app=pgrep
config.getChildren.args=-P %p
################################################################################
# prepareProcess info to gather
################################################################################
onTimeout=\
  native.pmap \
  native.pfiles \
  native.stack native.core
################################################################################
# solaris specific
################################################################################
native.pattern=%p
native.javaOnly=false

native.pmap.app=pmap
native.pmap.args=-F %p

native.pfiles.app=pfiles
native.pfiles.args=-F %p

# native.locks  TODO find 'analog for solaris' for Linux lslocks

native.stack.app=pstack
native.stack.args=-F %p
native.stack.params.repeat=6

# has to be the last command
native.core.app=kill
native.core.args=-ABRT %p
################################################################################
# environment info to gather
################################################################################
environment=\
  users.current users.logged users.last \
  disk \
  env \
  system.dmesg system.prtconf system.sysdef \
  process.ps process.top \
  memory.swap memory.vmstat.default memory.vmstat.statistics memory.pagesize \
  netstat.av netstat.m netstat.s netstat.i \
  screenshot
################################################################################
# common unix
################################################################################
users.current.app=id
users.current.args=-a
users.logged.app=who
users.logged.args=-a
users.last.app=last
users.last.args=-10

disk.app=df
disk.args=-h

env.app=env

system.dmesg.app=dmesg
system.prtconf.app=prtconf
system.sysdef.app=sysdef

memory.swap.app=swap
memory.swap.args=-l

process.ps.app=ps
process.ps.args=-Leo pid,lwp,ppid,tty,s,wchan,pcpu,time,stime,pmem,vsz,osz,rss,args

process.top.app=top
process.top.args=-b -n

memory.vmstat.app=vmstat
memory.vmstat.default.args=3 3
memory.vmstat.statistics.args=-s

memory.pagesize.app=pagesize

# TODO: how to start prstat to show statistics and exit?
# prstat.app=prstat
# prstat.args=-a

netstat.app=netstat
netstat.av.args=-av
netstat.m.args=-m
netstat.s.args=-s
netstat.i.args=-i 1 5

screenshot.app=bash
screenshot.args=-c\0\
    echo '\
        var robot = new java.awt.Robot();\
        var ge = java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment();\
        var bounds = ge.getDefaultScreenDevice().getDefaultConfiguration().getBounds();\
        var capture = robot.createScreenCapture(bounds);\
        var file = new java.io.File("screen.png");\
        javax.imageio.ImageIO.write(capture, "png", file);\
    ' | jshell -
screenshot.args.delimiter=\0
################################################################################
