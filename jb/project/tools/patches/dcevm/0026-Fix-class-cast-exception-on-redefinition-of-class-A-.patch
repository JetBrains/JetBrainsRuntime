From 5f416d7a25bd23399b9189cc94ab5d5887e6b4d4 Mon Sep 17 00:00:00 2001
From: Vladimir Dvorak <vladimir.dvorak@mailprofiler.com>
Date: Wed, 11 Mar 2020 14:19:34 +0100
Subject: [PATCH 26/48] Fix class cast exception on redefinition of class A,
 that is superclass of B that has anonymous class C

---
 src/hotspot/share/oops/instanceKlass.cpp | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/src/hotspot/share/oops/instanceKlass.cpp b/src/hotspot/share/oops/instanceKlass.cpp
index 9b6ba7e9304..8cbd4b8edf2 100644
--- a/src/hotspot/share/oops/instanceKlass.cpp
+++ b/src/hotspot/share/oops/instanceKlass.cpp
@@ -788,7 +788,10 @@ bool InstanceKlass::link_class_impl(bool throw_verifyerror, TRAPS) {
 
     if (!is_linked()) {
       if (!is_rewritten()) {
-        {
+        // In cases, if class A is being redefined and class B->A (B is extended from A) and B is host class of anonymous class C
+        // then second redefinition fails with cannot cast klass exception. So we currently turn off bytecode verification 
+        // on redefinition.
+        if (!newest_version()->is_redefining()) {
           bool verify_ok = verify_code(throw_verifyerror, THREAD);
           if (!verify_ok) {
             return false;
-- 
2.24.3 (Apple Git-128)

