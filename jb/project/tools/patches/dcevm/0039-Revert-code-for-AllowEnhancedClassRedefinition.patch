From 6ac099d1b07fcc0d3c17ebd5d3335bcb6ceaedc9 Mon Sep 17 00:00:00 2001
From: Vladimir Dvorak <lada.dvorak7@gmail.com>
Date: Tue, 19 May 2020 09:41:36 +0200
Subject: [PATCH 39/48] Revert code for !AllowEnhancedClassRedefinition

---
 .../share/classfile/classLoaderData.cpp       | 23 ++++++++++---------
 1 file changed, 12 insertions(+), 11 deletions(-)

diff --git a/src/hotspot/share/classfile/classLoaderData.cpp b/src/hotspot/share/classfile/classLoaderData.cpp
index 25103fff2c0..f5b877b432b 100644
--- a/src/hotspot/share/classfile/classLoaderData.cpp
+++ b/src/hotspot/share/classfile/classLoaderData.cpp
@@ -1387,12 +1387,13 @@ bool ClassLoaderDataGraph::do_unloading(bool clean_previous_versions) {
   // Klassesoto delete.
 
   // FIXME: dcevm - block asserts in MetadataOnStackMark
-  /*
-  bool walk_all_metadata = clean_previous_versions &&
-                           JvmtiExport::has_redefined_a_class() &&
-                           InstanceKlass::has_previous_versions_and_reset();
-  MetadataOnStackMark md_on_stack(walk_all_metadata);
-  */
+  bool walk_all_metadata = false;
+  if (!AllowEnhancedClassRedefinition) {
+    walk_all_metadata = clean_previous_versions &&
+                             JvmtiExport::has_redefined_a_class() &&
+                             InstanceKlass::has_previous_versions_and_reset();
+    MetadataOnStackMark md_on_stack(walk_all_metadata);
+  }
 
   // Save previous _unloading pointer for CMS which may add to unloading list before
   // purging and we don't want to rewalk the previously unloaded class loader data.
@@ -1402,12 +1403,12 @@ bool ClassLoaderDataGraph::do_unloading(bool clean_previous_versions) {
   while (data != NULL) {
     if (data->is_alive()) {
       // clean metaspace
-      /*
-      if (walk_all_metadata) {
-        data->classes_do(InstanceKlass::purge_previous_versions);
+      if (!AllowEnhancedClassRedefinition) {
+        if (walk_all_metadata) {
+          data->classes_do(InstanceKlass::purge_previous_versions);
+        }
+        data->free_deallocate_list();
       }
-      data->free_deallocate_list();
-      */
       prev = data;
       data = data->next();
       loaders_processed++;
-- 
2.24.3 (Apple Git-128)

