From b99ebb71bce6119cd800d69848f84281f2fd2b16 Mon Sep 17 00:00:00 2001
From: skybber <lada.dvorak7@gmail.com>
Date: Sat, 15 Dec 2018 18:23:30 +0100
Subject: [PATCH 07/48] Fix field method

---
 .../prims/jvmtiEnhancedRedefineClasses.cpp    | 19 ++++++++++++-------
 1 file changed, 12 insertions(+), 7 deletions(-)

diff --git a/src/hotspot/share/prims/jvmtiEnhancedRedefineClasses.cpp b/src/hotspot/share/prims/jvmtiEnhancedRedefineClasses.cpp
index 1c7595787a1..a3b65b273e5 100644
--- a/src/hotspot/share/prims/jvmtiEnhancedRedefineClasses.cpp
+++ b/src/hotspot/share/prims/jvmtiEnhancedRedefineClasses.cpp
@@ -264,21 +264,26 @@ class ChangePointersOopClosure : public BasicOopIterateClosure {
         }
       }
     } else if (MethodHandles::ref_kind_is_field(ref_kind)) {
-      Klass* k = (Klass*) java_lang_invoke_MemberName::vmtarget(obj);
+      oop clazz = java_lang_invoke_MemberName::clazz(obj);
+      if (clazz == NULL) {
+        return false;
+      }
+      Klass* k = java_lang_Class::as_Klass(clazz);
       if (k == NULL) {
         return false; // Was cleared before, this MemberName is invalid.
       }
 
-      if (k != NULL && k->new_version() != NULL) {
+      if (k->is_redefining()) {
         // Let's try to re-resolve field
+        InstanceKlass* old = InstanceKlass::cast(k->old_version());
         fieldDescriptor fd;
         int offset = java_lang_invoke_MemberName::vmindex(obj);
         bool is_static = MethodHandles::ref_kind_is_static(ref_kind);
-        InstanceKlass* ik = InstanceKlass::cast(k);
-        if (ik->find_local_field_from_offset(offset, is_static, &fd)) {
-          InstanceKlass* newest = InstanceKlass::cast(k->newest_version());
+        InstanceKlass* ik_old = InstanceKlass::cast(old);
+        if (ik_old->find_local_field_from_offset(offset, is_static, &fd)) {
+          InstanceKlass* ik_new = InstanceKlass::cast(k->newest_version());
           fieldDescriptor fd_new;
-          if (newest->find_local_field(fd.name(), fd.signature(), &fd_new)) {
+          if (ik_new->find_local_field(fd.name(), fd.signature(), &fd_new)) {
             Handle objHandle(Thread::current(), obj);  // TODO : review thread
             MethodHandles::init_field_MemberName(objHandle, fd_new, MethodHandles::ref_kind_is_setter(ref_kind));
           } else {
@@ -288,7 +293,7 @@ class ChangePointersOopClosure : public BasicOopIterateClosure {
             // Eventually, we probably want to replace them with something more meaningful,
             // like instance throwing NoSuchFieldError or DMH that will resort to dynamic
             // field resolution (with possibility of type conversion)
-            java_lang_invoke_MemberName::set_method(obj, NULL);
+            java_lang_invoke_MemberName::set_clazz(obj, NULL);
             java_lang_invoke_MemberName::set_vmindex(obj, 0);
             return false;
           }
-- 
2.24.3 (Apple Git-128)

