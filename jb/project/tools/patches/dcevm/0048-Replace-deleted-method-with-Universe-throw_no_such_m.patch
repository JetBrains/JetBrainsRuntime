From a5586aff03fde654102e2c2e1fc19fdea406b31e Mon Sep 17 00:00:00 2001
From: Vladimir Dvorak <lada.dvorak7@gmail.com>
Date: Sun, 24 May 2020 12:07:42 +0200
Subject: [PATCH 48/48] Replace deleted method with
 Universe::throw_no_such_method_error

---
 .../share/prims/resolvedMethodTable.cpp       | 28 +++++++++----------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/src/hotspot/share/prims/resolvedMethodTable.cpp b/src/hotspot/share/prims/resolvedMethodTable.cpp
index 7741328979f..06581643c3b 100644
--- a/src/hotspot/share/prims/resolvedMethodTable.cpp
+++ b/src/hotspot/share/prims/resolvedMethodTable.cpp
@@ -261,25 +261,25 @@ void ResolvedMethodTable::adjust_method_entries_dcevm(bool * trace_name_printed)
 
       if (old_method->is_old()) {
 
+        InstanceKlass* newer_klass = InstanceKlass::cast(old_method->method_holder()->new_version());
+        Method* newer_method;
+
         // Method* new_method;
         if (old_method->is_deleted()) {
-          // FIXME:(DCEVM) - check if exception can be thrown
-          // new_method = Universe::throw_no_such_method_error();
-          continue;
-        }
-
-        InstanceKlass* newer_klass = InstanceKlass::cast(old_method->method_holder()->new_version());
-        Method* newer_method = newer_klass->method_with_idnum(old_method->orig_method_idnum());
+          newer_method = Universe::throw_no_such_method_error();
+        } else {
+          newer_method = newer_klass->method_with_idnum(old_method->orig_method_idnum());
 
-        log_info(redefine, class, load, exceptions)("Adjusting method: '%s' of new class %s", newer_method->name_and_sig_as_C_string(), newer_klass->name()->as_C_string());
+          log_info(redefine, class, load, exceptions)("Adjusting method: '%s' of new class %s", newer_method->name_and_sig_as_C_string(), newer_klass->name()->as_C_string());
 
-        assert(newer_klass == newer_method->method_holder(), "call after swapping redefined guts");
-        assert(newer_method != NULL, "method_with_idnum() should not be NULL");
-        assert(old_method != newer_method, "sanity check");
+          assert(newer_klass == newer_method->method_holder(), "call after swapping redefined guts");
+          assert(newer_method != NULL, "method_with_idnum() should not be NULL");
+          assert(old_method != newer_method, "sanity check");
 
-        if (_the_table->lookup(newer_method) != NULL) {
-          // old method was already adjusted if new method exists in _the_table
-            continue;
+          if (_the_table->lookup(newer_method) != NULL) {
+            // old method was already adjusted if new method exists in _the_table
+              continue;
+          }
         }
 
         java_lang_invoke_ResolvedMethodName::set_vmtarget(mem_name, newer_method);
-- 
2.24.3 (Apple Git-128)

