// This filter adds a new line to the label of selected nodes with custom
// information. This is achieved by adding a special property 'extra_label' to
// them with information extracted from other properties, typically 'dump_spec'.

// Add extra line to method calls with callee information.
function callJavaInfo(dump_spec, regularPos, trapPos) {
  dump_components = split_string(dump_spec);
  if (dump_components.length < (trapPos + 1)) {
    return null;
  }
  var tm = /(uncommon_trap\(reason=\'(\w*)\')/.exec(dump_components[trapPos]);
  if (tm == null || typeof tm[2] == 'undefined') {
    return dump_components[regularPos];
  }
  return "trap: " + tm[2];
}
editProperty(matches("name", "CallStaticJava|CallDynamicJava|CallJava"), ["dump_spec"], "extra_label",
             function(dump_spec) {return callJavaInfo(dump_spec[0], 2, 2);});
editProperty(matches("name", "CallStaticJavaDirect|CallDynamicJavaDirect"), ["dump_spec"], "extra_label",
             function(dump_spec) {return callJavaInfo(dump_spec[0], 1, 3);});

function callLeafInfo(dump_spec, pos) {
  dump_components = split_string(dump_spec);
  if (dump_components.length < pos + 1) {
    return null;
  }
  return dump_components[pos];
}
editProperty(matches("name", "CallLeaf|CallLeafNoFP"), ["dump_spec"], "extra_label",
             function(dump_spec) {return callLeafInfo(dump_spec[0], 1);});
editProperty(matches("name", "CallLeafDirect|CallLeafDirectVector|CallLeafNoFPDirect"), ["dump_spec"], "extra_label",
             function(dump_spec) {return callLeafInfo(dump_spec[0], 0);});

// Show pre/main/post at CountedLoopNodes.
editProperty(hasProperty("loop_kind"), ["loop_kind"], "extra_label",
             function(loop_kind) { return loop_kind[0]; });
